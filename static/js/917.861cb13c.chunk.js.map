{"version":3,"file":"static/js/917.861cb13c.chunk.js","mappings":"gKAGMA,GAAaC,E,QAAAA,SAAOC,EAAAA,GAAPD,CAAH,+MAahB,K,wICDA,EAXsB,WACpB,OAA0BE,EAAAA,EAAAA,YAA1B,eAAOC,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAKR,OAHAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAcH,GAASI,KAAKL,EAC7B,GAAE,CAACC,EAASD,IACND,CACR,E,mBCXYO,EAAUV,EAAAA,QAAAA,IAAH,+DAKPW,EAAUX,EAAAA,QAAAA,IAAH,kE,SCgEpB,EAjEsB,WACpB,IACMY,EAAOC,IACPC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAkBjB,OACE,iCACE,SAACC,EAAA,EAAD,CACEC,QAAQ,WACRC,QAAS,WAAO,IAAD,IACbJ,EAAQ,iBAACF,QAAD,IAACA,GAAD,UAACA,EAAUO,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,IACnC,EAJH,qBAQCV,IACC,iCACE,UAACF,EAAD,YACE,SAACC,EAAD,CAASY,IAlCH,mCAkCkBX,EAAKY,YAAaC,IAAI,GAAGC,OAAO,WACxD,4BACE,wBAAKd,EAAKe,SACV,wCAAgBf,EAAKgB,aAAaC,QAAQ,OAC1C,sCACA,uBAAIjB,EAAKkB,YACT,oCACA,uBAAIlB,EAAKmB,OAAOC,KAAI,SAAAC,GAAE,OAAIA,EAAGC,IAAP,IAAaC,KAAK,QACxC,mBAAQf,QArCM,WACxB,IAAIgB,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,YAAc,GACrDJ,EAAMK,SAAS7B,EAAK8B,MACvBN,EAAMO,KAAK/B,EAAK8B,IAChBH,aAAaK,QAAQ,SAAUP,KAAKQ,UAAUT,IAEjD,EA+B+CU,MAAO,CAAEC,YAAa,IAA1D,8BAGA,mBAAQ3B,QAhCW,WAC7B,IAAIgB,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,YAAc,GACtDJ,EAAMK,SAAS7B,EAAK8B,MACtBN,EAAQA,EAAMY,QAAO,SAAAC,GAAI,OAAIA,IAASrC,EAAK8B,EAAlB,IACzBH,aAAaK,QAAQ,SAAUP,KAAKQ,UAAUT,IAEjD,EA0BW,yCAKJ,mDACA,SAAC,IAAD,CAAYc,GAAG,OAAO7B,MAAOP,EAASO,MAAtC,mBAGA,SAAC,IAAD,CAAY6B,GAAG,UAAU7B,MAAOP,EAASO,MAAzC,sBAGA,SAAC,KAAD,SAKT,C","sources":["components/Navigation/Navigation.styled.js","hooks/useFetchEvent.jsx","pages/MoviesDetails/MoviesDetails.styled.js","pages/MoviesDetails/MoviesDetails.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n`;\n\nexport default StyledLink;\n","import { fetchFilmById } from 'services/fetchApi';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst useFetchEvent = () => {\n  const [event, setEvent] = useState();\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchFilmById(movieId).then(setEvent);\n  }, [movieId, setEvent]);\n  return event;\n};\n\nexport default useFetchEvent;\n","import styled from 'styled-components';\n\nexport const FilmDiv = styled.div`\n  display: flex;\n  margin-top: 20px;\n`;\n\nexport const FilmImg = styled.img`\n  display: block;\n  margin-right: 25px;\n`;\n","import { Button } from '@mui/material';\nimport StyledLink from 'components/Navigation/Navigation.styled';\nimport useFetchEvent from 'hooks/useFetchEvent';\nimport { Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport { FilmDiv, FilmImg } from './MoviesDetails.styled';\n\nconst MoviesDetails = () => {\n  const baseURL = 'https://image.tmdb.org/t/p/w500/';\n  const data = useFetchEvent();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const addToLocalStorage = () => {\n    let items = JSON.parse(localStorage.getItem('movies')) || [];\n    if (!items.includes(data.id)) {\n      items.push(data.id);\n      localStorage.setItem('movies', JSON.stringify(items));\n    }\n  };\n\n  const deleteFromLocalStorage = () => {\n    let items = JSON.parse(localStorage.getItem('movies')) || [];\n    if (items.includes(data.id)) {\n      items = items.filter(item => item !== data.id);\n      localStorage.setItem('movies', JSON.stringify(items));\n    }\n  };\n\n  return (\n    <>\n      <Button\n        variant=\"outlined\"\n        onClick={() => {\n          navigate(location?.state?.from ?? '/');\n        }}\n      >\n        Go back\n      </Button>\n      {data && (\n        <>\n          <FilmDiv>\n            <FilmImg src={baseURL + data.poster_path} alt=\"\" height=\"450px\" />\n            <div>\n              <h2>{data.title}</h2>\n              <p>User Score: {data.vote_average.toFixed(1)}</p>\n              <h3>Overview</h3>\n              <p>{data.overview}</p>\n              <h3>Genres</h3>\n              <p>{data.genres.map(el => el.name).join(' ')}</p>\n              <button onClick={addToLocalStorage} style={{ marginRight: 10 }}>\n                Add to Favorite\n              </button>\n              <button onClick={deleteFromLocalStorage}>\n                Delete from Favorite\n              </button>\n            </div>\n          </FilmDiv>\n          <p>Additional information</p>\n          <StyledLink to=\"cast\" state={location.state}>\n            Cast\n          </StyledLink>\n          <StyledLink to=\"reviews\" state={location.state}>\n            Reviews\n          </StyledLink>\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["StyledLink","styled","NavLink","useState","event","setEvent","movieId","useParams","useEffect","fetchFilmById","then","FilmDiv","FilmImg","data","useFetchEvent","location","useLocation","navigate","useNavigate","Button","variant","onClick","state","from","src","poster_path","alt","height","title","vote_average","toFixed","overview","genres","map","el","name","join","items","JSON","parse","localStorage","getItem","includes","id","push","setItem","stringify","style","marginRight","filter","item","to"],"sourceRoot":""}