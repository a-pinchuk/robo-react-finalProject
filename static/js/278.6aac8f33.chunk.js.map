{"version":3,"file":"static/js/278.6aac8f33.chunk.js","mappings":"2OA4EA,UA/De,WACb,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCC,EAAAA,EAAAA,MAAlC,eAAOC,EAAP,KAAeC,EAAf,KACMC,EAAWF,EAAOG,IAAI,SAItBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACO,OAAXN,GAA8B,KAAXA,IACvBO,EAAAA,EAAAA,IAAgBL,GAAUM,KAAKV,EAChC,GAAE,CAACE,EAAQE,IASZ,OACE,iCACE,kBAAMO,OAAO,GAAGC,SATC,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OACfb,EAAgB,CAAEc,MAAOJ,EAAEG,OAAOE,SAASD,MAAME,QACjDJ,EAAKK,OACN,EAIG,WACE,SAAC,IAAD,CACEC,KAAK,QACLC,MAAM,YACNC,GAAG,iBACHC,MAAM,cACNC,QAAQ,cAGV,SAAC,IAAD,CAAQC,KAAK,SAASD,QAAQ,WAAWE,KAAK,SAASC,GAAI,CAAEC,GAAI,GAAjE,uBAID9B,IACC,SAAC,KAAD,UACGA,EAAM+B,KAAI,SAAAC,GACT,OACE,SAAC,KAAD,WACE,UAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAGR,IAAMU,MAAO,CAAEC,KAAM5B,GAA7C,WACE,SAAC,KAAD,CACE6B,IACEJ,EAAGK,YAxCP,mCAwC+BL,EAAGK,YAtChD,6GAwCgBC,IAAI,GACJC,MAAM,MACNC,OAAO,SAET,SAAC,KAAD,WACE,SAAC,KAAD,UAAYR,EAAGS,MAAQT,EAAGS,MAAQT,EAAGV,aAX3BU,EAAGR,GAgBtB,QAKV,C","sources":["pages/Movies/Movies.jsx"],"sourcesContent":["// import { TextField } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { Button, TextField } from '@mui/material';\nimport { fetchSearchFilm } from 'services/fetchApi';\nimport {\n  FilmTitle,\n  GalleryList,\n  MovieImage,\n  MovieInfo,\n  PhotoCard,\n} from '../Home/Home.styled';\n\nconst Movies = () => {\n  const [event, setEvent] = useState([]);\n  const [search, setSearchParams] = useSearchParams();\n  const filmName = search.get('query');\n  const baseURL = 'https://image.tmdb.org/t/p/w500/';\n  const noImagePoster =\n    'https://cdn.vectorstock.com/i/preview-1x/82/99/no-image-available-like-missing-picture-vector-43938299.jpg';\n  const location = useLocation();\n\n  useEffect(() => {\n    if (search === null || search === '') return;\n    fetchSearchFilm(filmName).then(setEvent);\n  }, [search, filmName]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    setSearchParams({ query: e.target.elements.query.value });\n    form.reset();\n  };\n\n  return (\n    <>\n      <form action=\"\" onSubmit={handleSubmit}>\n        <TextField\n          name=\"query\"\n          color=\"secondary\"\n          id=\"outlined-basic\"\n          label=\"Search Film\"\n          variant=\"outlined\"\n        />\n\n        <Button type=\"submit\" variant=\"outlined\" size=\"medium\" sx={{ ml: 2 }}>\n          Search\n        </Button>\n      </form>\n      {event && (\n        <GalleryList>\n          {event.map(el => {\n            return (\n              <PhotoCard key={el.id}>\n                <Link to={`/movies/${el.id}`} state={{ from: location }}>\n                  <MovieImage\n                    src={\n                      el.poster_path ? baseURL + el.poster_path : noImagePoster\n                    }\n                    alt=\"\"\n                    width=\"500\"\n                    height=\"750\"\n                  />\n                  <MovieInfo>\n                    <FilmTitle>{el.title ? el.title : el.name}</FilmTitle>\n                  </MovieInfo>\n                </Link>\n              </PhotoCard>\n            );\n          })}\n        </GalleryList>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["useState","event","setEvent","useSearchParams","search","setSearchParams","filmName","get","location","useLocation","useEffect","fetchSearchFilm","then","action","onSubmit","e","preventDefault","form","target","query","elements","value","reset","name","color","id","label","variant","type","size","sx","ml","map","el","to","state","from","src","poster_path","alt","width","height","title"],"sourceRoot":""}